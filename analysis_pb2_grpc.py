# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import analysis_pb2 as analysis__pb2


class AnalysisStub(object):
  """The analysis service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RequireAnalysis = channel.unary_unary(
        '/analysis.Analysis/RequireAnalysis',
        request_serializer=analysis__pb2.AnalysisRequest.SerializeToString,
        response_deserializer=analysis__pb2.AnalysisReply.FromString,
        )


class AnalysisServicer(object):
  """The analysis service definition.
  """

  def RequireAnalysis(self, request, context):
    """Sends an analysis request
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_AnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RequireAnalysis': grpc.unary_unary_rpc_method_handler(
          servicer.RequireAnalysis,
          request_deserializer=analysis__pb2.AnalysisRequest.FromString,
          response_serializer=analysis__pb2.AnalysisReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'analysis.Analysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
